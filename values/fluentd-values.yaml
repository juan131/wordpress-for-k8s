extraDeploy:
  - apiVersion: v1
    data:
      fluentd.conf: |
        # ignore fluentd own logs
        <label @FLUENT_LOG>
          <match fluent.*>
            @type null
          </match>
        </label>
        # ignore healthcheck logs
        <match fluentd.healthcheck>
          @type null
        </match>
        # HTTP input for the liveness and readiness probes
        <source>
          @type http
          port 9880
        </source>
        # Get the logs from the containers running in the cluster
        <source>
          @type tail
          @label @KUBERNETES
          path /var/log/containers/*.log
          pos_file /opt/bitnami/fluentd/logs/buffers/fluentd-docker.pos
          tag kubernetes.*
          <parse>
            @type json
            time_format %Y-%m-%dT%H:%M:%S.%NZ
          </parse>
        </source>
        # Forward Kubernetes logs to the aggregator
        <label @KUBERNETES>
          <match **>
            @type forward
            <server>
              host "#{ENV['FLUENTD_HOST']}"
              port "#{ENV['FLUENTD_PORT']}"
            </server>
            <buffer>
              @type file
              path /opt/bitnami/fluentd/logs/buffers/logs.buffer
              flush_thread_count 2
              flush_interval 5s
            </buffer>
          </match>
        </label>
    kind: ConfigMap
    metadata:
      name: apache-log-parser
      namespace: logging
  - apiVersion: v1
    data:
      fluentd.conf: |
        # ignore fluentd own logs
        <label @FLUENT_LOG>
          <match fluent.*>
            @type null
          </match>
        </label>
        # ignore healthcheck logs
        <match fluentd.healthcheck>
          @type null
        </match>
        # TCP input to receive logs from the forwarders
        <source>
          @type forward
          port 24224
        </source>
        # HTTP input for the liveness and readiness probes
        <source>
          @type http
          port 9880
        </source>
        # parse apache logs from wordpress containers
        <filter kubernetes.var.log.containers.wordpress*.log>
          @type parser
          key_name log
          <parse>
            @type apache2
          </parse>
        </filter>
        # send apache logs to elasticsearch
        <match kubernetes.var.log.containers.wordpress*.log>
          @type elasticsearch
          include_tag_key true
          tag_key _key
          host "#{ENV['ELASTICSEARCH_HOST']}"
          port "#{ENV['ELASTICSEARCH_PORT']}"
          logstash_format true
          logstash_prefix fluentd
          suppress_type_name true
          <buffer>
            @type file
            path /opt/bitnami/fluentd/logs/buffers/logs.buffer
            flush_thread_count 2
            flush_interval 5s
          </buffer>
        </match>
        # ignore the rest of kubernetes logs
        <match kubernetes.**>
          @type null
        </match>
    kind: ConfigMap
    metadata:
      name: elasticsearch-output
      namespace: logging
aggregator:
  configMap: elasticsearch-output
  extraEnv:
    - name: ELASTICSEARCH_HOST
      value: elasticsearch-coordinating-only.logging.svc.cluster.local
    - name: ELASTICSEARCH_PORT
      value: "9200"
forwarder:
  configMap: apache-log-parser
  extraEnv:
    - name: FLUENTD_DAEMON_USER
      value: root
    - name: FLUENTD_DAEMON_GROUP
      value: root
    - name: FLUENTD_HOST
      value: fluentd-0.fluentd-headless.logging.svc.cluster.local
    - name: FLUENTD_PORT
      value: "24224"
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: monitoring
